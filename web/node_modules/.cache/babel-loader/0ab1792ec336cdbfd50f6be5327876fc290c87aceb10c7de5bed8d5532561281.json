{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camcl\\\\Documents\\\\Cuatrimestre 5\\\\Fundamentos de redes\\\\C3\\\\Reproductor_Offline\\\\web\\\\src\\\\components\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const videoRef = useRef(null);\n  const [progress, setProgress] = useState(0);\n  const [isReady, setIsReady] = useState(false);\n  const [userInteracted, setUserInteracted] = useState(false);\n  const [hasSetInitialTime, setHasSetInitialTime] = useState(false);\n\n  // Manejar interacción del usuario\n  const handleUserInteraction = () => {\n    if (!userInteracted) {\n      setUserInteracted(true);\n      if (videoRef.current && videoRef.current.paused) {\n        videoRef.current.play().catch(e => {\n          console.log('Error al reproducir:', e);\n          videoRef.current.muted = true;\n          videoRef.current.play();\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('click', handleUserInteraction);\n    return () => document.removeEventListener('click', handleUserInteraction);\n  }, []);\n\n  // Obtener progreso guardado\n  useEffect(() => {\n    let isMounted = true;\n    const controller = new AbortController();\n    const fetchProgress = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/videos/${id}/progress`, {\n          signal: controller.signal\n        });\n        if (isMounted && response.data.success) {\n          setProgress(response.data.progress);\n          console.log('Progreso cargado:', response.data.progress);\n        }\n      } catch (err) {\n        if (isMounted && err.name !== 'CanceledError') {\n          console.error('Error al obtener progreso:', err);\n        }\n      } finally {\n        if (isMounted) setIsReady(true);\n      }\n    };\n    fetchProgress();\n    return () => {\n      isMounted = false;\n      controller.abort();\n    };\n  }, [id]);\n\n  // Configurar el video cuando esté listo\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!isReady || !video || hasSetInitialTime) return;\n    const handleLoadedMetadata = () => {\n      if (progress > 1 && !hasSetInitialTime) {\n        video.currentTime = progress;\n        setHasSetInitialTime(true);\n        console.log(`Tiempo establecido a: ${progress} segundos`);\n      }\n      const tryPlay = () => {\n        if (userInteracted) {\n          video.muted = false;\n          video.play().then(() => console.log('Reproducción con sonido exitosa')).catch(err => {\n            console.log('Intentando reproducir sin sonido:', err);\n            video.muted = true;\n            video.play();\n          });\n        } else {\n          video.muted = true;\n          video.play().then(() => console.log('Autoplay con mute exitoso')).catch(e => console.log('Autoplay bloqueado:', e));\n        }\n      };\n\n      // Pequeño retraso para mayor confiabilidad\n      setTimeout(tryPlay, 500);\n    };\n    video.addEventListener('loadedmetadata', handleLoadedMetadata);\n    return () => {\n      video.removeEventListener('loadedmetadata', handleLoadedMetadata);\n    };\n  }, [isReady, progress, userInteracted, hasSetInitialTime]);\n\n  // Guardar progreso periódicamente\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n    let saveTimeout;\n    let lastSavedProgress = -1;\n    const handleTimeUpdate = () => {\n      const currentProgress = Math.floor(video.currentTime);\n\n      // Guardar solo si ha cambiado significativamente\n      if (Math.abs(currentProgress - lastSavedProgress) >= 5) {\n        clearTimeout(saveTimeout);\n        saveTimeout = setTimeout(() => {\n          axios.post(`http://localhost:5000/api/videos/${id}/progress`, {\n            progress: currentProgress\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(() => {\n            console.log('Progreso guardado:', currentProgress);\n            lastSavedProgress = currentProgress;\n          }).catch(err => {\n            console.error('Error al guardar progreso:', err);\n          });\n        }, 1000); // Debounce de 1 segundo\n      }\n    };\n    video.addEventListener('timeupdate', handleTimeUpdate);\n    return () => {\n      clearTimeout(saveTimeout);\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n\n      // Guardar al desmontar\n      if (video.readyState >= 2) {\n        // HAVE_CURRENT_DATA\n        const currentProgress = Math.floor(video.currentTime);\n        axios.post(`http://localhost:5000/api/videos/${id}/progress`, {\n          progress: currentProgress\n        });\n      }\n    };\n  }, [id]);\n  if (!isReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando tu progreso...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    onClick: handleUserInteraction,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      controls: true,\n      muted: !userInteracted,\n      preload: \"auto\",\n      playsInline: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: `http://localhost:5000/api/videos/${id}/stream`,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), \"Tu navegador no soporta videos HTML5\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), !userInteracted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-message\",\n      children: \"Haz clic en el video para habilitar el sonido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"nxixinXWW8rEE0jE/j0SqUO/kuQ=\", false, function () {\n  return [useParams];\n});\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","axios","jsxDEV","_jsxDEV","VideoPlayer","_s","id","videoRef","progress","setProgress","isReady","setIsReady","userInteracted","setUserInteracted","hasSetInitialTime","setHasSetInitialTime","handleUserInteraction","current","paused","play","catch","e","console","log","muted","document","addEventListener","removeEventListener","isMounted","controller","AbortController","fetchProgress","response","get","signal","data","success","err","name","error","abort","video","handleLoadedMetadata","currentTime","tryPlay","then","setTimeout","saveTimeout","lastSavedProgress","handleTimeUpdate","currentProgress","Math","floor","abs","clearTimeout","post","headers","readyState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","controls","preload","playsInline","src","type","_c","$RefreshReg$"],"sources":["C:/Users/camcl/Documents/Cuatrimestre 5/Fundamentos de redes/C3/Reproductor_Offline/web/src/components/VideoPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst VideoPlayer = () => {\r\n  const { id } = useParams();\r\n  const videoRef = useRef(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [userInteracted, setUserInteracted] = useState(false);\r\n  const [hasSetInitialTime, setHasSetInitialTime] = useState(false);\r\n\r\n  // Manejar interacción del usuario\r\n  const handleUserInteraction = () => {\r\n    if (!userInteracted) {\r\n      setUserInteracted(true);\r\n      if (videoRef.current && videoRef.current.paused) {\r\n        videoRef.current.play().catch(e => {\r\n          console.log('Error al reproducir:', e);\r\n          videoRef.current.muted = true;\r\n          videoRef.current.play();\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleUserInteraction);\r\n    return () => document.removeEventListener('click', handleUserInteraction);\r\n  }, []);\r\n\r\n  // Obtener progreso guardado\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const controller = new AbortController();\r\n\r\n    const fetchProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/videos/${id}/progress`,\r\n          { signal: controller.signal }\r\n        );\r\n        \r\n        if (isMounted && response.data.success) {\r\n          setProgress(response.data.progress);\r\n          console.log('Progreso cargado:', response.data.progress);\r\n        }\r\n      } catch (err) {\r\n        if (isMounted && err.name !== 'CanceledError') {\r\n          console.error('Error al obtener progreso:', err);\r\n        }\r\n      } finally {\r\n        if (isMounted) setIsReady(true);\r\n      }\r\n    };\r\n\r\n    fetchProgress();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      controller.abort();\r\n    };\r\n  }, [id]);\r\n\r\n  // Configurar el video cuando esté listo\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (!isReady || !video || hasSetInitialTime) return;\r\n\r\n    const handleLoadedMetadata = () => {\r\n      if (progress > 1 && !hasSetInitialTime) {\r\n        video.currentTime = progress;\r\n        setHasSetInitialTime(true);\r\n        console.log(`Tiempo establecido a: ${progress} segundos`);\r\n      }\r\n\r\n      const tryPlay = () => {\r\n        if (userInteracted) {\r\n          video.muted = false;\r\n          video.play()\r\n            .then(() => console.log('Reproducción con sonido exitosa'))\r\n            .catch(err => {\r\n              console.log('Intentando reproducir sin sonido:', err);\r\n              video.muted = true;\r\n              video.play();\r\n            });\r\n        } else {\r\n          video.muted = true;\r\n          video.play()\r\n            .then(() => console.log('Autoplay con mute exitoso'))\r\n            .catch(e => console.log('Autoplay bloqueado:', e));\r\n        }\r\n      };\r\n\r\n      // Pequeño retraso para mayor confiabilidad\r\n      setTimeout(tryPlay, 500);\r\n    };\r\n\r\n    video.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n    \r\n    return () => {\r\n      video.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n    };\r\n  }, [isReady, progress, userInteracted, hasSetInitialTime]);\r\n\r\n  // Guardar progreso periódicamente\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n\r\n    let saveTimeout;\r\n    let lastSavedProgress = -1;\r\n\r\n    const handleTimeUpdate = () => {\r\n      const currentProgress = Math.floor(video.currentTime);\r\n      \r\n      // Guardar solo si ha cambiado significativamente\r\n      if (Math.abs(currentProgress - lastSavedProgress) >= 5) {\r\n        clearTimeout(saveTimeout);\r\n        \r\n        saveTimeout = setTimeout(() => {\r\n          axios.post(\r\n            `http://localhost:5000/api/videos/${id}/progress`,\r\n            { progress: currentProgress },\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n          ).then(() => {\r\n            console.log('Progreso guardado:', currentProgress);\r\n            lastSavedProgress = currentProgress;\r\n          }).catch(err => {\r\n            console.error('Error al guardar progreso:', err);\r\n          });\r\n        }, 1000); // Debounce de 1 segundo\r\n      }\r\n    };\r\n\r\n    video.addEventListener('timeupdate', handleTimeUpdate);\r\n    \r\n    return () => {\r\n      clearTimeout(saveTimeout);\r\n      video.removeEventListener('timeupdate', handleTimeUpdate);\r\n      \r\n      // Guardar al desmontar\r\n      if (video.readyState >= 2) { // HAVE_CURRENT_DATA\r\n        const currentProgress = Math.floor(video.currentTime);\r\n        axios.post(\r\n          `http://localhost:5000/api/videos/${id}/progress`,\r\n          { progress: currentProgress }\r\n        );\r\n      }\r\n    };\r\n  }, [id]);\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"spinner\"></div>\r\n        <p>Cargando tu progreso...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"video-container\" onClick={handleUserInteraction}>\r\n      <video\r\n        ref={videoRef}\r\n        controls\r\n        muted={!userInteracted}\r\n        preload=\"auto\"\r\n        playsInline\r\n      >\r\n        <source src={`http://localhost:5000/api/videos/${id}/stream`} type=\"video/mp4\" />\r\n        Tu navegador no soporta videos HTML5\r\n      </video>\r\n      {!userInteracted && (\r\n        <div className=\"play-message\">\r\n          Haz clic en el video para habilitar el sonido\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}